from typing import Self, Union

from lorelie.backends import SQLiteBackend


class BaseExpression:
    template: str = ...
    backend: SQLiteBackend = ...
    sql_statement: str = ...

    def __init__(self) -> None: ...

    def as_sql(self, backend: SQLiteBackend) -> str: ...


class When(BaseExpression):
    condition: str = ...
    then_case: str = ...
    else_case: str = ...

    def __init__(self, condition: str, then_case: str, **kwargs) -> None: ...


class Case(BaseExpression):
    field_name: str = ...
    cases: list[When] = ...

    def __init__(self, *cases: When) -> None: ...


class OrderBy(BaseExpression):
    ascending: set = ...
    descending: set = ...
    fields: list = ...

    def __init__(self, fields: Union[list[str], tuple[str]]) -> None: ...
    def __bool__(self) -> bool: ...
    @classmethod
    def new(cls, fields: list[str]) -> OrderBy: ...
    def map_fields(self) -> None: ...
