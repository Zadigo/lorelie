import pathlib
from functools import cached_property
from typing import DefaultDict, List, Type

from kryptone.db.backends import SQLiteBackend
from kryptone.db.fields import Field
from kryptone.db.tables import Table

class Migrations:
    CACHE: dict[str] = ...
    backend_class = Type[SQLiteBackend]
    file: pathlib.Path = ...
    file_id: str = ...
    tables: dict[str] = ...
    migration_table_map: list[str] = ...
    fields_map: DefaultDict[list] = ...
    tables_for_creation: set = ...
    tables_for_deletion: set = ...
    existing_tables: set = ...
    has_migrations: bool = ...

    def __init__(self) -> None: ...
    def __repr__(self) -> str: ...

    @cached_property
    def read_content(self) -> dict: ...

    def _write_fields(self, table: Table) -> None: ...
    def _write_indexes(self, table: Table) -> list: ...
    def create_migration_table(self) -> None: ...
    def check(self, table_instances: dict[str, Table] = ...) -> None: ...
    def check_fields(self, table: Table, backend: SQLiteBackend) -> None: ...
    def blank_migration(self) -> dict[str]: ...
    def make_migrations(self, tables: List[Table]) -> None: ...
    def get_table_fields(self, name: str) -> list[dict[str]]: ...
    def reconstruct_table_fields(self, table: Table) -> list[Field]: ...
