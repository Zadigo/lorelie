from typing import Optional

from lorelie.backends import SQLiteBackend

from lorelie.expressions import Q


class Index:
    prefix: str = ...
    max_name_length: int = ...
    index_name: str = ...
    name: str = ...
    fields: list[str] = ...
    index_name: str = ...
    condition: Q = ...
    table: Table = ...

    def __init__(
        self,
        name: str,
        fields: Optional[list[str]] = ...,
        condition: Optional[Q] = ...
    ) -> None: ...

    def __repr__(self) -> str: ...
    def prepare(self, table: Table) -> None: ...
    def as_sql(self, backend: SQLiteBackend) -> str: ...
